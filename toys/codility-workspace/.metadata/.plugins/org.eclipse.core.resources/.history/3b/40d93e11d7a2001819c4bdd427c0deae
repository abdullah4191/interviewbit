package test1;

public class LinkedListLength {

	/*
	 * public int solution(IntList L) { // write your code in Java SE 8
	 * 
	 * if (L == null) return 0; int size = 1; while (L.next != null) { size++; L =
	 * L.next; } return size; }
	 */

	static String solution(String S) {
		int[] occurrences = new int[26];
		for (char ch : S.toCharArray()) {
			occurrences[ch - 'a']++;
		}

		char best_char = 'a';
		int best_res = occurrences[0];

		for (int i = 1; i < 26; i++) {
			if (occurrences[i] > best_res) {
				System.out.println(best_res);
				System.out.println(occurrences[i]);
				best_char = (char) ((int) 'a' + i);
				best_res = occurrences[i];
			}
		}

		return Character.toString(best_char);
	}
	
	public static int min(int[] A) {
		//if(A.length>22)return 25;

		boolean[] isDayWithTrip = new boolean[31]; // note: initializes to false
		for (final int dayWithTrip : A) {
		    isDayWithTrip[dayWithTrip] = true;
		}
		int[] minCostUpThroughDay = new int[31];
		minCostUpThroughDay[0] = 0; // technically redundant
		for (int d = 1; d <= 30; ++d) {
		    if (! isDayWithTrip[d]) {
		        minCostUpThroughDay[d] = minCostUpThroughDay[d-1];
		        continue;
		    }

		    int minCost;
		    // Possibility #1: one-day pass on day d:
		    minCost = minCostUpThroughDay[d-1] + 2;
		    // Possibility #2: seven-day pass ending on or after day d:
		    for (int prevD = Math.max(0, d - 7); prevD <= d - 4; ++prevD) {
		        minCost = Math.min(minCost, minCostUpThroughDay[prevD] + 7);
		    }
		    // Possibility #3: 30-day pass for the whole period:
		    //minCost = Math.min(minCost, 25);

		    minCostUpThroughDay[d] = minCost;
		}
		return minCostUpThroughDay[30];
    }

	public static void main(String[] args) {
//		System.out.println(solution("zzaacc"));
		System.out.println(min(new int[]{1,2,4,5,7,29,30}));
		System.out.println(min(new int[] { 1,7,8,9,10 }));
		System.out.println(min(new int[] { 1,7,8,9,10,15 }));
		System.out.println(min(new int[] { 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,29,30 }));

	}

}
