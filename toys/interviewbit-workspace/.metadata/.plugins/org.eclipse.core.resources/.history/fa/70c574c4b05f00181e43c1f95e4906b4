package codeScratch;

public class SqrtSolution {
	
	public int sqrt(int a) {
		if(a==0)return 0;
		for(int i=1;i<a/2;i++){
	        if(a/i==i)return i;
			if(i*i>a)return i-1;
	    }
		return 1;
	}
	

    public  int floorSqrt(int a)
    {
        // Base Cases
        if (a == 0 || a == 1)
            return a;
 
        // Do Binary Search for floor(sqrt(a))
        int start = 1, end = a, ans=0;
        while (start <= end)
        {
            int mid = (start + end) / 2;
            double multiplier = mid;
            multiplier*=multiplier;
 
            // If a is a perfect square
            if ((multiplier) == a)
                return mid;
 
            // Since we need floor, we update answer when mid*mid is
            // smaller than a, and move closer to sqrt(a)
            if (multiplier < (double)a)
            {
                start = mid + 1;
                ans = mid;
            }
            else   // If mid*mid is greater than a
                end = mid - 1;
        }
        return ans;
    }

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		SqrtSolution instance = new SqrtSolution();
		System.out.println(instance.sqrt(2147483647 ));
		System.out.println(instance.floorSqrt(2147483647));
	}

}
