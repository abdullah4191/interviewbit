package codeScratch;

import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

public class ArrayRotated {
	public int findMin(final List<Integer> a) {
		int min = Integer.MAX_VALUE;

		int count = 0;

		int start = 0, end = a.size() - 1;
		while (start <= end) {
			int mid = start + (end - start) / 2;
			if (a.get(mid) == B) {

				return count;
			} else if (a.get(mid) > B) {
				end = mid - 1;
			} else {
				start = mid + 1;
			}
		}

		return min;
	}

	public static void main(String[] args) {
		ArrayRotated instance = new ArrayRotated();
		int[] arr = { 5, 7, 7, 8, 8, 10 };
		// int[] arr = { 1 };
		System.out.println(instance.findMin(IntStream.of(arr).boxed().collect(Collectors.toList())));

	}

}
